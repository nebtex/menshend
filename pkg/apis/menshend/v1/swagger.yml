swagger: '2.0'
info:
  version: 1.0.0
  title: menshend-api
  description: The API for the Menshend Project
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/space:
    get:
      tags:
      - Space
      description: get lab metadata (name, log, description)
      operationId: getSpace
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/Space"
        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string
  /v1/flashes:
    get:
      tags:
      - Flashes
      description: list current flashes (only makes sense in browsers)
      operationId: getFlashes
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/Flash"
        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string

  /v1/secret/{id}:
    parameters:
    - name: "id"
      in: "path"
      required: true
      type: "string"
      description: secret path
    get:
      security:
      - api_key:
        - all
      tags:
      - Secrets
      description: return secret associate with a service
      operationId: readSecret
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/Secret"
        403:
          description: Permission Error
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string

  /v1/clientServices:
    parameters:
    - name: "subdomain"
      in: "query"
      required: false
      type: "string"
      description: filter by subdomain
    - name: "role"
      in: "query"
      required: false
      type: "string"
      description: filter by role
    get:
      security:
      - api_key:
        - all
      tags:
      - Client
      description: list or search availables services
      operationId: listAvailableServices
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: "#/definitions/ClientService"
        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string

  /v1/account:
    get:
      tags:
      - Auth
      description: get login status
      operationId: loginStatus
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/LoginStatus"

        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string
    delete:
      security:
      - api_key:
        - all
      tags:
      - Auth
      description: login off
      operationId: logout
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/LoginStatus"
        403:
          description: Permission Error
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string

  /v1/adminServices/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        pattern: "^roles/[a-z0-9\\-]+/([a-z0-9\\-]+\\.)+$"
        type: "string"
        description: service id
    get:
      security:
      - api_key:
        - all
      tags:
      - Admin
      description: returns all the available information of the service
      operationId: adminGetService
      responses:
        200:
          description: Service
          schema:
            $ref: '#/definitions/AdminService'
        403:
          description: Permission Error
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string
    put:
      security:
      - api_key:
        - all
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
         $ref: '#/definitions/AdminService'
      tags:
      - Admin
      description: create a new service
      operationId: adminSaveService
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/AdminService'
        403:
          description: Permission Error
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string
    delete:
      security:
      - api_key:
        - all
      tags:
      - Admin
      description: delete service
      operationId: adminDeleteService
      responses:
        200:
          description: ok
          schema:
            type: object
        403:
          description: Permission Error
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string

  /v1/adminServices:
    parameters:
      - name: "subdomain"
        in: "query"
        required: true
        type: "string"
        pattern: "^([a-z0-9\\-]+\\.)+$"
        description: subdomain
    get:
      security:
      - api_key:
        - all
      tags:
      - Admin
      description: returns all the available information of the service over all the roles
      operationId: adminListService
      responses:
        200:
          description: Service
          schema:
            type: array
            items:
              $ref: '#/definitions/AdminService'
        403:
          description: Permission Error
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal error
          schema:
            type: object
            properties:
              message:
                type: string
securityDefinitions:
  api_key:
    type: apiKey
    name: X-Vault-Token
    in: header
definitions:
  Space:
    type: object
    properties:
      logo:
        type: string
      name:
        type: string
      shortDescription:
        type: string
      longDescription:
        type: string
      host:
        type: string
  Flash:
    type: object
    properties:
      flashes:
        type: array
        items:
          type: string
  LoginStatus:
    type: object
    properties:
      isLogged:
        type: boolean
      isAdmin:
        type: boolean
      canImpersonate:
        type: boolean
      sessionExpiresAt:
        type: integer
  ServiceCache:
    type: object
    properties:
      ttl:
        type: integer
  Cors:
    type: object
    properties:
      allowedOrigins:
        type: array
        items:
          type: string
      allowedMethods:
        type: array
        items:
          type: string
      allowedHeaders:
        type: array
        items:
          type: string
      allowCredentials:
        type: boolean
      optionsPassthrough:
        type: boolean
      maxAge:
        type: integer
      exposedHeaders:
        type: array
        items:
          type: string
  LongDescriptionLocal:
    type: object
    properties:
      content:
        type: string
  LongDescriptionRemote:
    type: object
    properties:
      content:
        type: string
      url:
        type: string
  Metadata:
    type: object
    properties:
      id:
        type: string
      roleId:
        type: string
      logo:
        type: string
      name:
        type: string
      description:
        type: string
      subDomain:
        type: string
      tags:
        type: array
        items:
          type: string
      longDescription:
        type: object
        properties:
          remote:
            $ref: '#/definitions/LongDescriptionRemote'
          local:
            $ref: '#/definitions/LongDescriptionLocal'
  LuaResolver:
    type: object
    properties:
      content:
        type: string
      makeBodyAvailable:
        type: boolean
  YAMLResolver:
    type: object
    properties:
      content:
        type: string
  Proxy:
    type: object
    properties:
      cors:
        $ref: '#/definitions/Cors'
  Redirect:
    type: object
  PortForward:
    type: object
  AdminService:
    type: object
    properties:
      meta:
        $ref: '#/definitions/Metadata'
      strategy:
        type: object
        properties:
          proxy:
            $ref: '#/definitions/Proxy'
          redirect:
            $ref: '#/definitions/Redirect'
          portForward:
            $ref: '#/definitions/PortForward'
      resolver:
        type: object
        properties:
          lua:
            $ref: '#/definitions/LuaResolver'
          yaml:
            $ref: '#/definitions/YAMLResolver'
      cache:
        $ref: '#/definitions/ServiceCache'
      impersonateWithinRole:
        type: boolean
      isActive:
        type: boolean
      fullUrl:
        type: string
      secretPaths:
        type: array
        items:
          type: string
  Secret:
    type: object
    description: vault secret object
    properties:
      request_id:
        type: string
      lease_duration:
        type: integer
      renewable:
        type: boolean
      data:
        type: object
      warnings:
        type: array
        items:
          type: string
      wrap_info:
        type: object
        properties:
          token:
            type: string
          ttl:
            type: integer
          creation_time:
            type: integer
          wrapped_accessor:
            type: string
      auth:
        type: object
        properties:
          client_token:
            type: string
          accessor:
            type: string
          policies:
            type: array
            items:
              type: string
          metadata:
            type: object
          lease_duration:
            type: integer
          renewable:
            type: boolean

  ClientService:
    type: object
    properties:
      meta:
        $ref: '#/definitions/Metadata'
      impersonateWithinRole:
        type: boolean
      fullUrl:
        type: string
      needPortForward:
        type: boolean
      isActive:
        type: boolean
      secretPaths:
        type: array
        items:
          type: string

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /
# Added by API Auto Mocking Plugin
basePath: /nebtex/Menshend/1.0.0
